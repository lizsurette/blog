<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Experience Design in the Open Hybrid Cloud</title>
    <description>How does if feel currently to experience the Open Hybrid Cloud? What do users see today and how can we design for the future?</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/sitemap.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 30 Mar 2021 18:50:51 -0400</pubDate>
    <lastBuildDate>Tue, 30 Mar 2021 18:50:51 -0400</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>Hello Again, World</title>
        <description>&lt;p&gt;I’ve decided that I’m going to start blogging again. Previously, I had written all about my design work with OpenStack. Since then, I’ve worked on a number of different projects including OpenShift and have recently transitioned to thinking about the Open Hybrid Cloud experience broadly. I’ll be sharing my stories as I enter and design for this brave new world. Stay tuned for more posts.&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Mar 2021 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/personal/open%20hybrid%20cloud/2021/03/17/hello-world.html</link>
        <guid isPermaLink="true">http://localhost:4000/personal/open%20hybrid%20cloud/2021/03/17/hello-world.html</guid>
        
        
        <category>personal</category>
        
        <category>open hybrid cloud</category>
        
      </item>
    
      <item>
        <title>Maturing the Horizon Overview Page Part 2 - Interaction Design</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;This was originally written and shared on January 30, 2014 when I was working daily with the OpenStack Community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;After going through an activity to &lt;a href=&quot;https://lizsurette.github.io/openstack/2014/01/27/maturing-horizon-overview-part-1.html&quot;&gt;understand the user and gather a list of requirements&lt;/a&gt;, Ju and I were in great shape to begin designing an Overview page that we could be sure would meet our Horizon users needs. As mentioned in my previous post, Ju played a big role in defining both the users and their requirements, but she continued to participate as I was designing to give feedback along the way as a use case expert.&lt;/p&gt;

&lt;p&gt;The first step in almost all of my designs includes some sort of sketching and/or whiteboarding. Depending on where I am and if I’m collaboratively designing, I’ll either sketch in my &lt;a href=&quot;http://www.moleskine.com/en/&quot;&gt;Moleskine&lt;/a&gt; or jump into a room with a whiteboard and start drawing. I normally just let my mind go over the requirements and try to capture things on paper/whiteboard as fast as I can, trying to avoid overthinking things. The best thing about drawing on paper or on a whiteboard is that you don’t get too attached to your designs. It’s easy to scrap ideas if you haven’t put a ton of effort into them. Here is a look into the very first ideas that Ju and I came up with for the updated Overview page:
&lt;img src=&quot;https://github.com/lizsurette/lizsurette.github.io/raw/main/static/img/_posts/overview-sketches.png&quot; alt=&quot;Overview Sketches&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pretty ugly at this point, right? Yes, I know I don’t have a future as a sketch artist. Well, the ideas are just starting to form at this point and organization and legibility isn’t a huge factor. At this point I’m talking and thinking much faster than my hand can capture. Let me try to translate a bit about the thought process here… We’d like to break down the information that a user would want to see on the Overview page into 3 main sections: Compute, Storage, and Network &amp;amp; Security. It would be great to give the user some visualizations that they can glance at quickly to get an idea of how their environment is performing. Perhaps a mixture of a sparkline to show the trend over time and a bar graph to give the user a picture of the current utilization would be the best way to represent this mix of data. Since this is an Overview page, the user will likely jump off and perform certain actions from this page. It would be nice to have a section of quick links to common actions to support this. There will be additional links and details for certain categories of information that also need to be represented on the screen.&lt;/p&gt;

&lt;p&gt;After a good hour of sketching and further discussion with Ju, I took a stab at translating these ideas into wireframes. Wireframes are more solid than sketching, but that doesn’t mean they are a final product. The goal behind wireframes is to get them into a legible format that can be distributed. Wireframes can still be changed very easily. They are not set in stone by any means, but they serve as a great way to get feedback on what certain pieces of the UI could start to look like. For these wireframes, I used Adobe InDesign, although I’ve used a lot of other tools in the past eight years of my design career. A quick side bar on a few of the tools I’ve used and why I’d use them in the future:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;axure&quot;&gt;Axure&lt;/h4&gt;
  &lt;p&gt;Great for working on a shared prototype with a group. Can check in /out files to prevent from stepping on each others toes. The output is a clickable HTML prototype which is great for getting a sense of the small interaction details of a design.&lt;/p&gt;
  &lt;h4 id=&quot;photoshop&quot;&gt;Photoshop&lt;/h4&gt;
  &lt;p&gt;Super steep learning curve, but a very powerful tool once you get the basics down. Great for prototyping high-fidelity mockups or even cutting up and editing an existing mockup quickly.&lt;/p&gt;
  &lt;h4 id=&quot;illustrator&quot;&gt;Illustrator&lt;/h4&gt;
  &lt;p&gt;Similar to Photoshop with respect to learning curve. Certain basics like selecting objects isn't consistent with Photoshop which can be frustrating, but a great tool in the end for creating vector designs that may need to scale. I've also used this for print designs with success.&lt;/p&gt;
  &lt;h4 id=&quot;balsamiq&quot;&gt;Balsamiq&lt;/h4&gt;
  &lt;p&gt;Awesome for really quick WISIWIG wireframing/prototyping. Very nice “Sketch” skin that makes it clear these wireframes can be changed easily. There is also a way to change the skin to look a bit more polished if needed. This tool also allows assigning of clickable elements which produces a PDF that acts like a clickable prototype.&lt;/p&gt;
  &lt;h4 id=&quot;indesign&quot;&gt;InDesign&lt;/h4&gt;
  &lt;p&gt;The use of masters makes larger sets of designs where elements are reused throughout pages easy to wrangle. Similar to Photoshop and Illustrator with respect to features, but again the slight difference in interactions gives the user yet another learning curve. There is also a way to make elements clickable in an outputted PDF, so this can simulate a prototype.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A big factor in the tool I use is which other designers I’m working with and what tools they are using. I try really hard to sync up with the majority of other designers that I’m working collaboratively and use what they are using. It makes it that much easier to bounce ideas off of each other, share, and reuse designs.&lt;/p&gt;

&lt;p&gt;After half of a day of translating sketches to wireframes and adding in a few extra details, here is how the first cut panned out:
&lt;img src=&quot;https://github.com/lizsurette/lizsurette.github.io/raw/main/static/img/_posts/overview-wireframes.png&quot; alt=&quot;Overview Wireframes&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you are familiar with Horizon, you will probably first notice that the navigation structure looks a bit different from the current Havana release. We have been experimenting with updating the navigation design and the idea of horizontal navigation just happened to make this set of wireframes, so if you can, ignore the navigation changes for now and focus on the content of this Overview page. As in the early sketches, the wireframe is broken down into 3 sections. The first focuses on Compute information. Users are presented a graph of information showing details for Instances, vCores, vCPUs, and Memory. They can quickly view how many of each of these are currently in use compared to the quota that is allowed. Users can also quickly jump via links to public or private images that are being used by instances. Similarly, the user can view a section for Storage information: specifically Ephemeral, Object, Block, and Snapshot usage and quotas. I decided to break down the larger “Quick Links” area into a list of links specific to each section of data. This breakdown, for example, will make it easier to jump to Storage actions if the user is currently focused on a Storage task. With respect to Network and Security, the user can quickly see the number of Floating IPs both mapped and unmapped as well as the number of Security Groups.&lt;/p&gt;

&lt;p&gt;After getting to a solid point with the wireframes, the next step was to reach out to a few different groups for feedback. I &lt;a href=&quot;http://ask-openstackux.rhcloud.com/question/59/improvements-to-horizon-overview/&quot;&gt;reached out&lt;/a&gt; to the UX community for some thoughts. This community is fairly new. I didn’t get much feedback here considering two of the main contributors to the site are Ju and me. Another team that I reached out to for feedback was the Horizon development team. During the weekly meeting I shared my progress and they were excited about the direction of this design. I figured using the weekly meeting would be a more targeted way of getting feedback rather than blasting the entire openstack-dev mailing list, but using the mailing list in the future might be a good way to get more eyes on designs.  Currently, I’m seeking out feedback from end users to validate that these wireframes would meet their needs. I’ve &lt;a href=&quot;http://lists.openstack.org/pipermail/openstack-operators/2014-January/003956.html&quot;&gt;posted&lt;/a&gt; to the openstack-operators mailing list in hopes that some potential users will be able to give some thoughts on these designs.&lt;/p&gt;

&lt;p&gt;I’ve linked to these designs in the Horizon &lt;a href=&quot;https://blueprints.launchpad.net/horizon/+spec/project-overview-page-ceilometer&quot;&gt;blueprint&lt;/a&gt; for this feature. My next steps are to give any design support that is needed (answering questions, updating the design) during the development of this blueprint. After the implementation is done, I want to do some usability testing with end users to be sure it works for them in their work environment. Stay tuned for posts on both of these topics.&lt;/p&gt;

&lt;p&gt;What do you think about this design? Is there anything missing at an overview level that you would expect to be here for an end user? How about the design process? I’d love to hear if you have any suggestions on improving this as well.&lt;/p&gt;

&lt;p&gt;Best,
Liz&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jan 2014 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/openstack/2014/01/30/maturing-horizon-overview-part-2.html</link>
        <guid isPermaLink="true">http://localhost:4000/openstack/2014/01/30/maturing-horizon-overview-part-2.html</guid>
        
        
        <category>openstack</category>
        
      </item>
    
      <item>
        <title>Maturing the Horizon Overview Page Part 1 - Understanding the User and Gathering</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;This was originally written and shared on January 27, 2014 when I was working daily with the OpenStack Community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;Let’s take a quick look at the current (Havana) Horizon Overview page:
&lt;img src=&quot;https://github.com/lizsurette/lizsurette.github.io/raw/main/static/img/_posts/current-horizon-overview-page.png&quot; alt=&quot;Havana Horizon Overview&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon login, non-administrator users are taken to the Project Overview page within &lt;a href=&quot;http://docs.openstack.org/developer/horizon/&quot;&gt;Horizon&lt;/a&gt;. Here the user can see a basic set of information about the number of instances, VCPUs, RAM, Floating IPs, and Security Groups that are currently in use in their environment along with the quota that they are allowed. There is also a table that lets the user view the running instances along with a usage summary for the instances shown. The user has the opportunity to filter this table by date range when needed. While this information might cover certain use cases, my colleague &lt;a href=&quot;https://plus.google.com/105626042354015503324/posts&quot;&gt;Ju Lim&lt;/a&gt; and I wanted to take a step back from the current Overview page and think through the type of information that this user of Horizon would want to see when they first log in.&lt;/p&gt;

&lt;p&gt;Now before I go on, this is when &lt;a href=&quot;http://en.wikipedia.org/wiki/Persona_(user_experience)&quot;&gt;Personas&lt;/a&gt; could have &lt;em&gt;REALLY&lt;/em&gt;  helped us. Unfortunately, we hadn’t gotten far enough along with our Persona work within OpenStack to use them, so we had to rely on what we knew from past projects we’ve worked on as well as the data we had from the set of users we had talked to about how they currently use OpenStack. In the coming months, I’ll share the work that we are starting to do in the Persona space, but for now I’d like to note that we plan to revisit these requirements once we have some great Persona data so that we are sure that these completely meet end users needs.&lt;/p&gt;

&lt;p&gt;After reviewing the current state of the Horizon Project Overview page, Ju and I started to brainstorm on how we might improve this page for end users. The goal of this effort was to take this page to the next level of maturity. The big questions that we needed to answer were:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Who is the main end user of this page?&lt;/li&gt;
  &lt;li&gt;What does this user want and need to see at an Overview level?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Without Personas, we started off by defining the main responsibilities and objectives of the Consumer, the end user of the Overview page:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As a Consumer, I need to understand the usage of the resources I consume within each project. Due to this, I am concerned with getting a bird’s eye view to the resources within my project. I want to monitor usage data over time so that I can optimize the utilization of my resources.&lt;/p&gt;

  &lt;p&gt;My responsibilities/objectives:&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;I’m interested in monitoring usage for the projects that I manage:
      &lt;ul&gt;
        &lt;li&gt;I want to be able to see usage vs. quota limit.&lt;/li&gt;
        &lt;li&gt;I’d like to be able to drill-down in order to view more details.&lt;/li&gt;
        &lt;li&gt;I need to be able to troubleshoot an alert to identify root cause.&lt;/li&gt;
        &lt;li&gt;I want to analyze usage levels and trends to see if the resource is running out of capacity&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;I’m responsible for managing resources within my project:
      &lt;ul&gt;
        &lt;li&gt;I can have access to one or more projects but currently have no ability to see an overview page with multiple projects.  I can only switch between projects.&lt;/li&gt;
        &lt;li&gt;I interact with project images (create, rename, delete).&lt;/li&gt;
        &lt;li&gt;I launch and terminate instances.&lt;/li&gt;
        &lt;li&gt;I attach and detach network interfaces.&lt;/li&gt;
        &lt;li&gt;I associate and unassociate Floating IP addresses.&lt;/li&gt;
        &lt;li&gt;I manage key pairs (as needed for object storage).&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;After gathering a better understanding of what the primary user looking at the Overview page wants to do, it was important for us to stay focused on the word Overview. As we talked about all of the information that we could &lt;i&gt;potentially&lt;/i&gt; show, we kept a list. Of course, we needed to make sure we kept ourselves honest and took a look through the metrics that are &lt;a href=&quot;http://docs.openstack.org/developer/ceilometer/measurements.html&quot;&gt;available in Ceilometer today&lt;/a&gt;. Here is the list of important metrics that we came up with:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Instances&lt;/li&gt;
    &lt;li&gt;Public Images&lt;/li&gt;
    &lt;li&gt;Private Images&lt;/li&gt;
    &lt;li&gt;vCores&lt;/li&gt;
    &lt;li&gt;vCPUs&lt;/li&gt;
    &lt;li&gt;Memory usage&lt;/li&gt;
    &lt;li&gt;Ephemeral storage capacity&lt;/li&gt;
    &lt;li&gt;Duration of the ephemeral storage&lt;/li&gt;
    &lt;li&gt;Object storage capacity&lt;/li&gt;
    &lt;li&gt;Objects&lt;/li&gt;
    &lt;li&gt;Average object size&lt;/li&gt;
    &lt;li&gt;Containers&lt;/li&gt;
    &lt;li&gt;Key Pairs&lt;/li&gt;
    &lt;li&gt;Block volume capacity&lt;/li&gt;
    &lt;li&gt;Block volumes&lt;/li&gt;
    &lt;li&gt;Snapshot capacity&lt;/li&gt;
    &lt;li&gt;Snapshots&lt;/li&gt;
    &lt;li&gt;Backup capacity&lt;/li&gt;
    &lt;li&gt;Backups&lt;/li&gt;
    &lt;li&gt;Floating IPs Mapped / Allocated&lt;/li&gt;
    &lt;li&gt;Floating IPs Unmapped / Unallocated&lt;/li&gt;
    &lt;li&gt;Load Balancers&lt;/li&gt;
    &lt;li&gt;Security Groups&lt;/li&gt;
    &lt;li&gt;Services’ Status – globally and across region (and domain)&lt;/li&gt;
    &lt;li&gt;Alerts&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;We took this rough list of metrics and started to discuss each one.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;What specifically about each would the user be interested in seeing?&lt;/li&gt;
  &lt;li&gt;What would the units be?&lt;/li&gt;
  &lt;li&gt;Is this really a piece of information that’s helpful to see at an overview level?&lt;/li&gt;
  &lt;li&gt;Would it make more sense for the user to drill in further for this information?&lt;/li&gt;
  &lt;li&gt;Is this a future concept?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We wanted to be sure that our current requirements are attainable. We also started to think about not only the metrics that a user would want to monitor, but what actions would a user want to be able to quickly perform from this view? After a few revisions, we ended up with a more detailed requirement list, organized by metric type:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;Summary (Count) of resources
      &lt;ul&gt;
        &lt;li&gt;Instances and Images&lt;/li&gt;
      &lt;/ul&gt;
      &lt;ul&gt;
        &lt;li&gt;Instances (used / running and available out my quota limit)&lt;/li&gt;
        &lt;li&gt;Images (aka instance snapshots)&lt;/li&gt;
        &lt;li&gt;Public Images&lt;/li&gt;
        &lt;li&gt;Private Images&lt;/li&gt;
        &lt;li&gt;vCores (used and available)&lt;/li&gt;
        &lt;li&gt;vCPUs (used and available)&lt;/li&gt;
        &lt;li&gt;Memory (used and available)&lt;/li&gt;
        &lt;li&gt;Quick Links: Launch a new instance, Launch a new stack&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Storage
      &lt;ul&gt;
        &lt;li&gt;Ephemeral
          &lt;ul&gt;
            &lt;li&gt;Ephemeral capacity (used and available)&lt;/li&gt;
            &lt;li&gt;Duration of the ephemeral storage&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;Object
          &lt;ul&gt;
            &lt;li&gt;Object capacity (used and available)&lt;/li&gt;
            &lt;li&gt;Number of Objects&lt;/li&gt;
            &lt;li&gt;Average object size&lt;/li&gt;
            &lt;li&gt;Number of Containers&lt;/li&gt;
            &lt;li&gt;Number of Key Pairs&lt;/li&gt;
            &lt;li&gt;Quick Links: Create a container, Create a key pair&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;Block / Persistent
          &lt;ul&gt;
            &lt;li&gt;Block volume capacity (used / active and available)&lt;/li&gt;
            &lt;li&gt;Number of Block volumes (used and available)&lt;/li&gt;
            &lt;li&gt;Snapshot capacity (used and available)&lt;/li&gt;
            &lt;li&gt;Number of Snapshots&lt;/li&gt;
            &lt;li&gt;Backup capacity (used and available)&lt;/li&gt;
            &lt;li&gt;Number of Backups&lt;/li&gt;
            &lt;li&gt;Quick Links: Create a volume&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Network
      &lt;ul&gt;
        &lt;li&gt;Number of Floating IPs&lt;/li&gt;
        &lt;li&gt;Number of Mapped / Number of Allocated&amp;lt;&lt;/li&gt;
        &lt;li&gt;Number of Unmapped / Number of Unallocated&amp;lt;&lt;/li&gt;
        &lt;li&gt;Number of Load Balancers (currently available on experimental basis)&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Security
      &lt;ul&gt;
        &lt;li&gt;Number of Security Groups&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Health
      &lt;ul&gt;
        &lt;li&gt;Services’ Status – globally and across region (and domain)&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Alerts
      &lt;ul&gt;
        &lt;li&gt;Number of Alerts&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;There. A nice organized list of metrics that we want to design towards. Do you have any feedback on this list of requirements as it exists so far? I’m always looking to improve requirements and designs based on user feedback.&lt;/p&gt;

&lt;p&gt;Also, keep an eye out for my next post in the “Maturing the Overview page in Horizon&quot; series where I walk through the design phase of this effort.&lt;/p&gt;

&lt;p&gt;Best,
Liz&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Jan 2014 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/openstack/2014/01/27/maturing-horizon-overview-part-1.html</link>
        <guid isPermaLink="true">http://localhost:4000/openstack/2014/01/27/maturing-horizon-overview-part-1.html</guid>
        
        
        <category>openstack</category>
        
      </item>
    
      <item>
        <title>The OpenStack Years: Which groups in OpenStack do User Experience designers influence today?</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;This was originally written and shared on December 16, 2013 when I was working daily with the OpenStack Community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;Before I jump into blog posts about OpenStack user experience requirements, designs, and user testing, I wanted to start with some level setting and explain some of the groups that have been a focus in the user experience space.&lt;/p&gt;

&lt;h4 id=&quot;user-experience&quot;&gt;User Experience&lt;/h4&gt;
&lt;p&gt;To start, let me give a quick introduction to the way user experience design currently works within OpenStack. How do we as user experience professionals work within the OpenStack community? Today, we work very closely with the Horizon and TripleO/Tuskar teams. We attend the weekly IRC meetings, participate in feature requirement discussions, register blueprints, report bugs, design wireframes for new features, and test existing features with users.&lt;/p&gt;

&lt;p&gt;User experience isn’t an official program in OpenStack, but a few of us have started to form a team around the efforts in the UX space. We now have an &lt;a href=&quot;http://ask-openstackux.rhcloud.com/questions/&quot;&gt;Ask OpenStack UX&lt;/a&gt; site where we house design discussions. Weekly, we send out an update to the mailing list on the &lt;a href=&quot;http://lists.openstack.org/pipermail/openstack-dev/2013-December/020935.html\&quot;&gt;current topics&lt;/a&gt; that are being discussed. As a group we are continuously improving our processes. We are discussing the option of moving to and using the &lt;a href=&quot;https://github.com/openstack-infra/storyboard\&quot;&gt;StoryBoard&lt;/a&gt; tool that Thierry Carrez proposed at the Hong Kong summit.&lt;/p&gt;

&lt;p&gt;How could you contribute to the user experience effort in OpenStack? Join us in discussions on Ask OpenStack UX, share your wireframes, give your feedback as an OpenStack user, or simply give your thoughts on how we could improve our way of working. You can find us in #openstack-ux on Freenode if you’d like to chat.&lt;/p&gt;

&lt;h4 id=&quot;horizon&quot;&gt;Horizon&lt;/h4&gt;
&lt;p&gt;As I mentioned in &lt;a href=&quot;https://lizsurette.github.io/openstack/2013/12/12/openstack-an-introduction.html&quot;&gt;my first blog post&lt;/a&gt;, Horizon is where I jumped into the OpenStack world. This is the only user interface that is currently shipped with the core OpenStack product and it seems obvious to me that others will have the same experience. The Horizon Dashboard gives the user a visual way to perform basic OpenStack tasks like spinning up an Instance and assigning that instance a floating IP. Of course, the user can do these things from the command line interface (CLI), but the UI is where most of the user experience work that has been done so far has been focused.&lt;/p&gt;

&lt;p&gt;The Horizon development team is a great bunch to work with and are extremely supportive of making sure this component has great user experience design. Currently, Horizon only supports the other core components, but developers are welcomed to add plugins to Horizon for components they are working on outside of the core.&lt;/p&gt;

&lt;p&gt;There are a few options that I know about for quickly getting access to a running version of Horizon if you’d like to poke around and test things out.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;http://trystack.org/ - You can get a free account by joining their Facebook group. Once you’ve been added to the group, simply use your Facebook credentials for authentication and you’ll be able to view the Horizon UI.&lt;/li&gt;
  &lt;li&gt;http://www.stacklab.org/ - This is another quick way to get access to Horizon to poke around.&lt;/li&gt;
  &lt;li&gt;If you are feeling brave and would like to get your own environment up and running – Spin up a RHEL-based Linux distro in a VM and run through the &lt;a href=&quot;http://openstack.redhat.com/Quickstart&quot;&gt;Quick Start guide&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Another way to get a development environment up and running would be to use http://devstack.org/&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are interested in jumping into the development or review side of Horizon, feel free to come to one of our &lt;a href=&quot;https://wiki.openstack.org/wiki/Meetings#Horizon_team_meeting&quot;&gt;weekly meetings on IRC&lt;/a&gt; to get a feel for what we are working on today. Also, getting started with Horizon can be done by following the &lt;a href=&quot;http://docs.openstack.org/developer/horizon/quickstart.html&quot;&gt;quick start instructions&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;tripleo&quot;&gt;TripleO&lt;/h4&gt;
&lt;p&gt;In my introductory &lt;a href=&quot;https://lizsurette.github.io/openstack/2013/12/12/openstack-an-introduction.html&quot;&gt;Why a blog? Who is the intended audience of this blog?&lt;/a&gt;, I mentioned that I quickly realized that installation and deployment are big areas in which the usability of OpenStack could be improved. &lt;a href=&quot;https://wiki.openstack.org/wiki/TripleO&quot;&gt;TripleO&lt;/a&gt; and Tuskar work together to tackle just this.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;TripleO is a program aimed at installing, upgrading and operating OpenStack clouds using OpenStack’s own cloud facilities as the foundations - building on nova, neutron and heat to automate fleet management at data center scale. (https://wiki.openstack.org/wiki/TripleO)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s a bit of a mind bending concept, but I highly recommend watching Robert Collins’ &lt;a href=&quot;https://www.youtube.com/watch?v=RjUvpfzejtU&amp;amp;ab_channel=OpenInfrastructureFoundation&quot;&gt;talk from the Portland OpenStack Summit&lt;/a&gt;. Although TripleO continues to evolve with each release, I found this talk to be a great introduction.&lt;/p&gt;

&lt;h4 id=&quot;tuskar&quot;&gt;Tuskar&lt;/h4&gt;
&lt;p&gt;We haven’t worked on any user experience designs specifically for TripleO, but this is where &lt;a href=&quot;https://wiki.openstack.org/wiki/TripleO/Tuskar&quot;&gt;Tuskar&lt;/a&gt; comes into play.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tuskar gives administrators the ability to control how and where OpenStack services are deployed across the data center. Using Tuskar, administrators divide hardware into “resource classes” that allow predictable elastic scaling as cloud demands grow. This resource orchestration allows Tuskar users to ensure SLAs, improve performance, and maximize utilization across the data center. (https://wiki.openstack.org/wiki/TripleO/Tuskar)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tuskar has recently combined efforts with the TripleO program and is bringing a user interface into the mix. Although there are &lt;a href=&quot;http://lists.openstack.org/pipermail/openstack-dev/2013-December/021388.html&quot;&gt;huge discussions&lt;/a&gt; currently taking place about the requirements for the Icehouse release of Tuskar working with TripleO, a demo of the initial concepts shown at the Hong Kong Summit can be seen &lt;a href=&quot;https://www.youtube.com/watch?v=VEY035-Lyzo&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ultimately, TripleO and Tuskar will work together to provide a community solution for installing and deploying an OpenStack environment solving a huge need for the end users of OpenStack!&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Dec 2013 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/openstack/2013/12/16/openstack-user-experience-influence.html</link>
        <guid isPermaLink="true">http://localhost:4000/openstack/2013/12/16/openstack-user-experience-influence.html</guid>
        
        
        <category>openstack</category>
        
      </item>
    
      <item>
        <title>The OpenStack Years: Why a blog?</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;This was originally written and shared on December 12, 2013 when I was working daily with the OpenStack Community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;I should start off with an introduction. I’m Liz and I’ve been working for Red Hat for just over a year. I work on the User Experience Design team with a focus on the &lt;a href=&quot;http://www.openstack.org/&quot;&gt;OpenStack&lt;/a&gt; project.&lt;/p&gt;

&lt;p&gt;Since I started working at Red Hat I’ve been working on the OpenStack project. That means I’ve been involved with the project for almost a year now. So why has it taken me a year to decide to start this blog? Well, there has definitely been a learning curve. With everything that I’ve done in the OpenStack space, I’ve tried to take the view point of the OpenStack customer or end user. I started off very small in the OpenStack world by installing the latest release (which was Folsom at the time). I realized that there wasn’t one solid way to go about installing OpenStack, so I spent a lot of my days hacking around and getting something up and running. Ultimately, I ended up getting a development environment running on Fedora 19 using &lt;a href=&quot;http://devstack.org/&quot;&gt;DevStack&lt;/a&gt;. As many other people in the OpenStack community have already done, I came to the conclusion that installation and deployment should be high on the priority list when it comes to improving the usability of OpenStack.&lt;/p&gt;

&lt;p&gt;Once I got access to a running version of OpenStack, I spent time reviewing the Horizon Dashboard. Although the usability field doesn’t have to be limited to user interfaces, it was a great place for me to start. I needed to get familiar with what features were offered in OpenStack and what better way to do this than to try the features out myself. Come to find out later that there are actually features in OpenStack that aren’t surfaced in the UI. I had no idea they even existed at this point. I went about reviewing the dashboard and I logged a fair amount of bugs in &lt;a href=&quot;https://bugs.launchpad.net/horizon/+bugs&quot;&gt;Launchpad&lt;/a&gt;. Most of the bugs were small, but a few were for some larger usability issues that would be great to solve. I was so excited to see a few of these bugs get picked up and fixed right away.&lt;/p&gt;

&lt;p&gt;I was lucky enough to be able to attend my first OpenStack Summit as we planned for the Grizzly release in Portland, OR. Getting to meet the majority of the Horizon community in person was awesome. I realized during this Summit just how passionate and supportive this group of people are working together on OpenStack. I was so happy to be a part of this. As I’ve continued my work on OpenStack and have become more familiar with the processes, I’ve stepped up the amount of work that I’ve been able to contribute to the project. I’ve done work on creating use cases, developing personas, sketching, wireframing, and user testing. I’ve shared my work via e-mails, conversations over IRC, or documents and spreadsheets that have been created.&lt;/p&gt;

&lt;p&gt;As I look back over the last year’s worth of work, I realize that I’ve influenced a lot of small features, but it takes some time to compile the list of items I’ve completed. As I move forward with my OpenStack work, I’d like to make sure that I take some time with each of the tasks I work on to do a small write up of what I’m working on and why it’s important to the OpenStack community. I hope this blog will generate further discussion and help improve the usability of OpenStack even more than if I simply share my work via e-mail and IRC.&lt;/p&gt;

&lt;p&gt;Another goal of this blog is for it to serve as a history of some of the usability topics that have been discussed in the OpenStack community. It would be great if my posts sparked some conversations about moving certain features forward. I definitely won’t confine my posts to just UI topics, so as I start to explore some of the ways that user experience professionals can influence things like APIs and the command line, I hope others find my discoveries helpful.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Dec 2013 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/openstack/2013/12/12/openstack-an-introduction.html</link>
        <guid isPermaLink="true">http://localhost:4000/openstack/2013/12/12/openstack-an-introduction.html</guid>
        
        
        <category>openstack</category>
        
      </item>
    
  </channel>
</rss>
